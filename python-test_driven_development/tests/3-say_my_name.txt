============================
doctest for 3-say_my_name.py
============================
``say_my_name()`` prints a sentence with two variables in it first and last name

>>> say_my_name = __import__('3-say_my_name').say_my_name

SUCCESSFUL TEST CONDITIONS
==========================

testing with two strings
::
>>> say_my_name("Pouquerou", "Baptiste")
My name is Pouquerou Baptiste

testing with one empty string
::
>>> say_my_name("Pouquerou")
My name is Pouquerou 

testin with two empty string
::
>>> say_my_name("", "")
My name is  

testing with number instead of string
::
>>> say_my_name(12, "Baptiste")
Traceback (most recent call last):
TypeError: first_name must be a string

testing with last name as number
::
>>> say_my_name("Pouquerou", 123)
Traceback (most recent call last):
TypeError: last_name must be a string

testing with a bolean as argument
::
>>> say_my_name(True, True)
Traceback (most recent call last):
TypeError: first_name must be a string

testing with none passed as argument
::
>>> say_my_name(None, "Baptiste")
Traceback (most recent call last):
TypeError: first_name must be a string

testing with nothing passed
::
>>> say_my_name()
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required positional argument: 'first_name'



TEST WITH INVALID INPUT
=========================
