==============================
doctest for 7-base_geometry.py
==============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

TEST WITH SUCCESS
===============

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

testing from main 7
::
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

testing with 0
::
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

testing with a negativ number
::
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

testing validator with a float
::
>>> bg.integer_validator("baptiste", 3.14)
Traceback (most recent call last):
TypeError: baptiste must be an integer

testing validator with a dictionnary
::
>>> bg.integer_validator("baptiste", {cestmoi, cestlui})
Traceback (most recent call last):
NameError: name 'cestmoi' is not defined

testing validator with a tulpe
::
>>> bg.integer_validator("baptiste", (0, 1, 2))
Traceback (most recent call last):
TypeError: baptiste must be an integer

testing validator with a none as name and value
::
>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer