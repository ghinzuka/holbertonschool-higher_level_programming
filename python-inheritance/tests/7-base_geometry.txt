==============================
doctest for 7-base_geometry.py
==============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

TEST WITH SUCCESS
===============

testing main test
::
>>> print(dir(bg))
['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'area', 'integer_validator']

testing from main 6
::
>>> try:
...     print(bg.area())
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented

testing from main 7
::
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

testing with 0
::
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

testing with a negativ number
::
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

testing validator with a float
::
>>> bg.integer_validator("baptiste", 3.14)
Traceback (most recent call last):
TypeError: baptiste must be an integer

testing validator with a dictionnary
::
>>> bg.integer_validator("baptiste", {cestmoi, cestlui})
Traceback (most recent call last):
NameError: name 'cestmoi' is not defined

testing validator with a tulpe
::
>>> bg.integer_validator("baptiste", (0, 1, 2))
Traceback (most recent call last):
TypeError: baptiste must be an integer

testing validator with a none as name and value
::
>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer

testing validator with 3 arguments
::
>>> bg.integer_validator("baptiste", "encore", "un", "baptiste")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 5 were given

testing validator with no arguments
::
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

testing with a succed
::
>>> bg.integer_validator("baptiste", 32)
